name: Build specific commit TDLib
on:
  workflow_dispatch:
      inputs:
        tdSha:
          description: 'Enter tdlib sha.'
          required: true

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
     # upload_url: ${{ steps.create_release.outputs.upload_url }}
      sha_short: ${{ steps.vars.outputs.sha_short }}
      td_version: ${{ steps.ver.outputs.td_version }}
      # release_id: ${{ steps.create_release.outputs.id }}
      td_commit_date: ${{ steps.vars.outputs.td_commit_date }}
      tdSha: ${{ github.event.inputs.tdSha }}
      lastTdHash: ${{ steps.get_lastest_hash.outputs.lastTdHash }}
    steps:
      - name: Get latest release
        id: latest_release
        uses: cardinalby/git-get-release-action@1.2.5
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          repo: pcpl2/tdLibBinaresForFlutterDesktop
          latest: true
          prerelease: false
          draft: false

      - name: Get last tdlibBuild hash
        id: get_lastest_hash
        run: |
          echo "${{ steps.latest_release.outputs.id }}"
          echo "${{ steps.latest_release.outputs.name }}"
          echo "${{ steps.latest_release.outputs.body }}" | grep "TDLib SHA" | awk '{ print $3 }'
          echo "lastTdHash=$(echo "${{ steps.latest_release.outputs.body }}" | grep "TDLib SHA" | awk '{ print $3 }' | sed -E ':a;N;$!ba;s/\n//g')" >> $GITHUB_OUTPUT
      - name: Checkout tdLib repo
        uses: actions/checkout@v4.1.6
        with:
          ref: ${{ github.event.inputs.tdSha }}
          repository: tdlib/td
          path: td
      
      - name: Set outputs
        id: vars
        run: |
          cd td
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "td_commit_date=$(git show -s --date=format:'%d-%m-%Y %H:%M' --format=%cd)" >> $GITHUB_OUTPUT
          echo "date=$(date +'%d-%m-%Y %H:%M')" >> $GITHUB_OUTPUT
        
      - name: Get version
        id: ver
        run: |
          cd td
          echo "line of file: $(grep -in 'project(TDLib' CMakeLists.txt)"
          echo "version: $(grep -in 'project(TDLib' CMakeLists.txt| egrep -o '([0-9]{1,}\.)+[0-9]{1,}')"
          echo "td_version=$(grep -in 'project(TDLib' CMakeLists.txt| egrep -o '([0-9]{1,}\.)+[0-9]{1,}')" >> $GITHUB_OUTPUT
  BuildLinux:
    needs: create_release
    name: Build Linux
    uses: ./.github/workflows/BuildOnLinux.yml
    with:
      tdSha: ${{ github.event.inputs.tdSha }}
    secrets:
      #uploadUrl: ${{ needs.create_release.outputs.upload_url }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  BuildmacOS:
    needs: create_release
    name: Build macOS
    uses: ./.github/workflows/BuildOnMac.yml
    with:
      tdSha: ${{ github.event.inputs.tdSha }}
      tdVersion: ${{ needs.create_release.outputs.td_version }}
    secrets:
      #uploadUrl: ${{ needs.create_release.outputs.upload_url }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  BuildWindows:
    needs: create_release
    name: Build Windows
    uses: ./.github/workflows/BuildOnWindows.yml
    with:
      tdSha: ${{ github.event.inputs.tdSha }}
    secrets:
      #uploadUrl: ${{ needs.create_release.outputs.upload_url }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_release:
    name: Publish release
    runs-on: ubuntu-latest
    needs: [create_release, BuildLinux, BuildmacOS, BuildWindows]
    steps:
      - uses: actions/download-artifact@v4.1.7

      - name: Get current date
        id: date
        run: |
          echo "dateTime=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y-%m-%d_%H_%M_%S')" >> $GITHUB_OUTPUT

      - name: Run Script
        shell: bash
        run: |
              echo "TDLib commit date: ${{ needs.create_release.outputs.td_commit_date }}" >> "release.md"
              echo "TDLib commit SHA: ${{ needs.create_release.outputs.tdSha }}" >> "release.md"
              echo "Build date: ${{ steps.date.outputs.dateTime }}" >> "release.md"
              echo "https://github.com/tdlib/td/compare/${{ needs.create_release.outputs.lastTdHash }}...${{ needs.create_release.outputs.tdSha }}" >> "release.md"
              echo "" >> "release.md"
              for dir in */; do
                dir=${dir%/}
                zip_file="$dir.zip"
                cd "$dir"
                zip -r ../"$zip_file" *
                cd ..
                sha256sum_value=$(sha256sum "$zip_file" | awk '{print $1}')
                echo "### $zip_file" >> "release.md"
                echo "SHA-256: $sha256sum_value" >> "release.md"
                echo "" >> "release.md"
              done

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2.0.5
        with:
          body_path: "release.md"
          name: '${{ needs.create_release.outputs.td_version }}'
          tag_name: '${{ needs.create_release.outputs.td_version }}'
          files: *.zip
          draft: true
          prerelease: false